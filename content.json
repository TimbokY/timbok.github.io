{"meta":{"title":"Timbok's Blog","subtitle":"B.Y'S BLOG","description":"看到这段话说明你也是个IT工作者，这里有很多不错的技术博，希望和大家成为朋友，互相进步。","author":"Timbok","url":"https://yb909144903.github.io"},"pages":[{"title":"文章分类","date":"2018-11-29T08:08:09.000Z","updated":"2018-11-29T11:22:15.403Z","comments":false,"path":"categories/index.html","permalink":"https://yb909144903.github.io/categories/index.html","excerpt":"","text":""},{"title":"Photo","date":"2018-11-29T08:33:26.000Z","updated":"2018-11-29T08:33:26.820Z","comments":true,"path":"photo/index.html","permalink":"https://yb909144903.github.io/photo/index.html","excerpt":"","text":""},{"title":"个人简历","date":"2018-11-29T11:24:59.000Z","updated":"2018-12-02T08:23:17.810Z","comments":true,"path":"introduce/index.html","permalink":"https://yb909144903.github.io/introduce/index.html","excerpt":"","text":"Timbok(yb909144903@gmail.com)个人信息 学历：本科 专业：软件工程 职业：web前端小白 发量：茂盛 技术博客：https://timbok.top 地点： 上海 项目经历 ████████████████████ ████████████████████ ████████████████████ ████████████████████ 技能列表 熟悉vueJS、React等主流MVC、MVVM框架； 掌握localStorage、sessionStorage等前端存储方案，记录用户操作习惯或常用数据，从而降低HTTP请求，提升用户体验； 熟练使用SVN、git版本控制工具，进行代码管理，实现敏捷开发； 熟练使用Bootstarp框架，通过栅格系统快速布局响应式页面以适应 不同设备； 熟练使用Ajax，实现异步页面无刷新抽取数据，同步校验数据； 熟练使用HTML、CSS、JavaScript等前端技术，完成网页静态布局， 开发兼容主流浏览器的页面，以及实现页面的交互，提升用户体验； 了解node.js，利用其搭建简单的服务器。 个人爱好 吃饭、睡觉、打豆豆 打LOL"}],"posts":[{"title":"给Hexo搭建的博客绑定域名","slug":"Hexo域名","date":"2018-12-02T07:25:54.000Z","updated":"2018-12-02T08:01:25.192Z","comments":true,"path":"2018/12/02/Hexo域名/","link":"","permalink":"https://yb909144903.github.io/2018/12/02/Hexo域名/","excerpt":"","text":"前言前几天利用闲置时间，利用hexo在GitHub上搭建了一个静态博客，那么既然是个人博客，当然要上自己的域名了。 step-1首先你得你得搭建 XXX.github.io 这样的博客，[hexo教程]。 step-2你的博客可以访问后，去阿里云、腾讯云等网站去注册个域名。 step-3获取博客的ip地址 Tips: 这一步主要为了解析域名，不获取IP的话，step4解析A类型就行 第一： clone 你创建的 仓库 xxx.github.io 第二： git的输入 ping www.xxx.github.io 得到IP 如下图： step-4等域名审核完后，和我相关的就来了。以下用阿里云注册的域名为例。进入阿里云的管理控制台-域名与网站-云解析DNS，进入域名的解析设置，点击新手指导，将得到的 IP 地址填到记录值一栏，点击确定就 OK 了。填完以后的解析列表会出现： 记录值就是自己 github 的二级域名的 IP地址。 Tips: 一般解析都需要点时间，等个20分钟左右就好了 step-5在hexo项目下 source 文件下创建CNAME 文件（没有后缀名的），在里面写上购买的域名，例如： step-6最后到你 xxx.github.io 的Settings里，填上你的域名 这样新域名就ok啦，可以访问了。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://yb909144903.github.io/categories/Hexo/"}],"tags":[]},{"title":"Git中遇到的大大小小的坑","slug":"Git","date":"2018-11-29T12:41:49.000Z","updated":"2018-11-29T12:44:41.931Z","comments":true,"path":"2018/11/29/Git/","link":"","permalink":"https://yb909144903.github.io/2018/11/29/Git/","excerpt":"","text":"目的：记录自己平时在项目中遇到的坑 Tips 不要在dev上操作。 更新git: git update- 1.windows清除git保存账号信息步骤因为做项目可能会用到不同的gitLab远程库，我的git默认是记住密码的，当时困扰了我好久，项目中的一个大佬，告诉的我这种方法。 开始菜单-&gt;控制面板-&gt;凭据管理器-&gt;windows凭据-&gt;从保管库中删除. 如图： 2.Git修改文件名大小写时不更新如果使用windows系统Coding，使用git时,如果一个文件只是把文件名的大小写改一下,提交后默认更新下来还是改之前的情况。通过谷歌，我找到以下两种方案。 通过修改”core.ignorecase false”来设置git大小写敏感.需要在提交端修改. git config core.ignorecase false 先删除文件再添加进去 git rmgit add.git commit -m “rename file” 终极解决方案 3.平时项目中git的基本操作 暂存修改的文件 git add [fileName] ——暂存某个文件git add . ——暂存所有修改的文件 撤销本地修改文件 git checkout [fileName] ——撤销某个文件git checkout . ——撤销所有修改的文件 提交暂存区文件 fix：修复bug update：更新文件 add：新增文件 modify：重命名 delete：删除文件 git commit -m “你的提交备注” 不想commit，那就储藏 git stash ——储藏git stash pop/apply ——弹出储藏 将本地仓库的代码推到远程分支 git push [远程分支名] 切换分支 git checkout [你要切换的分支名] 注释：切换分支之前，一定要将修改的文件提交或者放进储藏区 拉取远程分支代码 git pull orgin [分支名]git pull ——拉取当前分支的代码 合并分支 git merge [你要合并的分支名] 查看本地分支 git branch 查看远程分支 git branch -a 删除本地分支 git branch -d/-D [你要删除的分支] 删除远程分支 git branch orgin –delete [你要删除掉的分支] 查看提交记录 git loggit log -5 查看五条记录 查看被删除的提交记录 git reflog 回滚代码 git reset [commitId] 回滚代码但修改的代码还在git reset –hard [commitId] 回滚代码且修改的代码也没了 推送代码 git push orgin [当前分支]:devlop 连接远程仓库 git remote add origin 仓库地址仓库地址：https://git.coding.net/xxxxxxxxxxxxx/my-project.gitgit push -u orgin master 删除远程仓库 git remote remove origin 因为这篇文章属于我自己的记录，有的为别人博客的内容。侵权必删","categories":[{"name":"Git","slug":"Git","permalink":"https://yb909144903.github.io/categories/Git/"}],"tags":[]},{"title":"三分钟教你同步 visual studio code 设置","slug":"vscode","date":"2018-11-28T11:57:11.000Z","updated":"2018-11-29T08:28:51.808Z","comments":true,"path":"2018/11/28/vscode/","link":"","permalink":"https://yb909144903.github.io/2018/11/28/vscode/","excerpt":"","text":"简介Visual Studio Code(以下简称vsCode)现在已经渐渐成为前端开发的主力工具，谁让它这么轻便，功能又这么轻便呢。用vscode Coding的小伙伴们也一定会装很多插件吧。但是当你准备更换电脑的时候，是不是为迁移插件和设置而烦恼？我曾经换电脑的时候，把vsCode上自己心爱的插件一个个记下，然后去新电脑上重装，太蠢了。今天我就把vsCode同步设置和插件的方法告诉大家。 准备工作 下载Settings Sync插件 GitHub账号 1.安装Settings Sync Setting Sync 快捷键： 1) 上传： Shift + Alt + U (Sync: Update / Upload Settings) 2) 下载： Shift + Alt + D (Sync: Download Settings) 如果快捷键有冲突，可Ctrl + K + S快捷键设置配置其它快捷键 或 Ctrl + P / F1 在命令窗口输入 &gt;sync 即会出现相应命令供选择 2.打开GitHub 这样你就得到一个token，最好找个地方记下来。因为它就是同步设置的关键。 3.将token配置到vsCode(Sync: Update / Uplaod Settings) Shift + Alt + U 在弹窗里输入你的token， 回车后会生成syncSummary.txt文件 syncSummary.txt文件会存储VSCode的设置及所安装的插件列表 如果你使用的是新版本的vsCode 打开设置，在搜索框中输入sync，就可以看到自己的token了 4.设置同步下载设置(Sync: Download Settings) Shift + Alt + D 在弹窗里输入你的gist值，稍后片刻便可同步成功 5.如果要重置同步设置，变更其它tokenCtrl+P / F1 弹出输入&gt;sync,即可重新配置你的其它token来同步 6.Tips上传同步设置的时候，vsCode底下可以看到操作信息 Setting Sync 可同步包含的所有扩展和完整的用户文件夹 1) 设置文件 2) 快捷键设置文件 3) Launch File 4) Snippets Folder 5) VSCode 扩展设置 6) 工作空间 参考文章 Settings Sync更新说明","categories":[{"name":"工具资源","slug":"工具资源","permalink":"https://yb909144903.github.io/categories/工具资源/"}],"tags":[]},{"title":"测试Blog","slug":"index","date":"2018-11-27T11:57:11.000Z","updated":"2018-11-29T08:28:51.808Z","comments":true,"path":"2018/11/27/index/","link":"","permalink":"https://yb909144903.github.io/2018/11/27/index/","excerpt":"","text":"Welcom to Timbok’s Blog","categories":[{"name":"随身笔记","slug":"随身笔记","permalink":"https://yb909144903.github.io/categories/随身笔记/"}],"tags":[]}]}